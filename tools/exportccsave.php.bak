<html>
<body bgcolor="#ffffff">
<LINK href="../citrus.css" type=text/css rel=STYLESHEET>

<?php
// Copyright (C) 2002  Paul Yasi <paul@citrusdb.org>, read the README file for more information
//include('../include/database.inc');
//include('../include/user.inc');

//GET Variables
$submit = $_GET['submit'];
$batchid = $_GET['batchid'];
$mydate = $_GET['mydate'];

if (!user_isloggedin()) {
	echo 'You must be logged in to use this feature<br>';
	exit;
	//user_logout();
	//$user_name='';
}

if ($submit) {  // maybe this can be combined with the exportcc.php once it's all worked out

	// go through a list of billing_id's that are to be billed today
	$query = "SELECT DISTINCT billing_id FROM billing_details WHERE creation_date = CURRENT_DATE AND batch = '$batchid'";
        $distinctresult = db_query($query) or die ("Query Failed".db_error());

	$user =  user_getname();
	// make a new billing_history record for each billing id group - use the billing_history_id as the invoice number
	while ($myresult = db_fetch_assoc($distinctresult))
        {
        	$mybilling_id = $myresult['billing_id'];
		$query = "INSERT INTO billing_history (billing_date, created_by, record_type, billing_type, billing_id) 
			VALUES (CURRENT_DATE,'$user','bill','creditcard','$mybilling_id')";
		$historyresult = db_query($query) or die ("Query Failed".db_error());
		
		// set the invoice number for billing_details that have the corresponding billing_id 
		// and haven't been assigned an invoice number yet
		$myinsertid = db_insertid();
		$invoice_number=$myinsertid;
		$query = "UPDATE billing_details SET invoice_number = '$invoice_number' 
			WHERE billing_id = '$mybilling_id' AND invoice_number IS NULL";
		$invnumresult = db_query($query) or die ("Query Failed".db_error());
			
		// get the billing name and address for the export

		// get the data for the service charges still pending and what services they have
		$query = "SELECT d.billing_id d_billing_id, d.creation_date d_creation_date, d.user_services_id d_user_services_id,
	        d.invoice_number d_invoice_number, d.billed_amount d_billed_amount, d.paid_amount d_paid_amount, 
		u.id u_id, u.account_number u_account_number, 
		m.id m_id, m.service_description m_description, m.options_table m_options_table
	        FROM billing_details d
	        LEFT JOIN user_services u ON d.user_services_id = u.id
	        LEFT JOIN master_services m ON u.master_service_id = m.id
	        WHERE d.billing_id = $mybilling_id";
        
	        $invoiceresult = db_query($query) or die ("Query Failed".db_error()); // used to show the invoice
		$totalresult = db_query($query) or die ("Query Failed".db_error());  // used to add up the total charges

		// get the data for the billing name and address and stuff from the billing table
		$query = "SELECT * FROM billing WHERE id = $mybilling_id";
		$billingresult = db_query($query) or die ("Query Failed".db_error());

		$myresult = db_fetch_assoc($billingresult);
		$billing_name = $myresult['name'];
		$billing_company = $myresult['company'];
		$billing_street = $myresult['street'];
		$billing_city = $myresult['city'];
		$billing_state = $myresult['state'];
		$billing_zip = $myresult['zip'];
		$billing_acctnum = $myresult['account_number'];
		$billing_ccnum = $myresult['creditcard_number'];
		$billing_ccexp = $myresult['creditcard_expire'];
		$billing_fromdate = $myresult['from_date'];
		$billing_todate = $myresult['to_date'];
		$billing_payment_due_date = $myresult['payment_due_date'];

		// get the data for the general company/organization info printed on the bill
                $query = "SELECT * FROM general";
                $generalresult = db_query($query) or die ("Query Failed".db_error());

		$myresult = db_fetch_assoc($generalresult);
                $org_name = $myresult['org_name'];
                $org_street = $myresult['org_street'];
                $org_city = $myresult['org_city'];
                $org_state = $myresult['org_state'];
                $org_zip = $myresult['org_zip'];
                $phone_billing = $myresult['phone_billing'];
                $email_billing = $myresult['email_billing'];
        	$path_to_citrus = $myresult['path_to_citrus'];
        	$ccexportvarorder = $myresult['ccexportvarorder'];

		$invoicetotal = 0;
		$mydate = date("Y-m-d");

		// get the invoicetotal
		while ($myresult = db_fetch_assoc($totalresult))
                {
                        $billed_amount = $myresult['d_billed_amount'] - $myresult['d_paid_amount'];
                        $invoicetotal = $billed_amount + $invoicetotal;
                }
	
		// check the total, if it is zero don't do anything else, since this billing id has no services assigned to it
		if ($invoicetotal != 0)
		{

			$precisetotal = sprintf("%.2f", $invoicetotal);

			// print out the information to be exported (save this to a file once we know it's right)
			$filename = "$path_to_citrus/io/export$batchid.csv";
			$handle = fopen($filename, 'a'); // open the file

			// get the absolute value of the total
			$abstotal = abs($precisetotal);

			// use the $ccexportvarorder that has the list of variables into real variables
			eval ("\$exportstring = \"$ccexportvarorder\";");

			// print the line in the exported data file
			if ($precisetotal < 0)	// print CREDIT if the precise_total is negative
			{
				//$newline = "CREDIT,$mybilling_id,$invoice_number,$billing_ccnum,$billing_ccexp,$abstotal,$billing_zip,$billing_street\n";
				$newline = "CREDIT,$exportstring\n";
			} else {
				//$newline = "CHARGE,$mybilling_id,$invoice_number,$billing_ccnum,$billing_ccexp,$abstotal,$billing_zip,$billing_street\n";
				$newline = "CHARGE,$exportstring\n";
			}
			fwrite($handle, $newline); // write to the file


			// put a record in the billing_history to note the invoice total, tax, and details
			$query = "UPDATE billing_history 
				  SET from_date = '$billing_fromdate',
				  to_date = '$billing_todate',
				  payment_due_date = '$billing_payment_to_date',
				  subtotal_due = '$precisetotal',
				  total_due = '$precisetotal'
				  WHERE id = '$invoice_number'";
	                $historyresult = db_query($query) or die ("Query Failed".db_error());
	
	                //// update the Next Billing Date to whatever the billing type dictates +1 +2 +6 etc.			
			// get the current billing type
			$query = "SELECT b.billing_type b_billing_type, b.next_billing_date b_next_billing_date, 
				b.from_date b_from_date, b.to_date b_to_date, t.id t_id, t.frequency t_frequency 
				FROM billing b
				LEFT JOIN billing_types t ON b.billing_type = t.id
				WHERE b.id = $mybilling_id";		
			$billingresult = db_query($query) or die ("Query Failed".db_error());
			$billingresult = db_fetch_assoc($billingresult);
			
			$mybillingdate = $billingresult['b_next_billing_date'];
			$myfromdate = $billingresult['b_from_date'];
			$mytodate = $billingresult['b_to_date'];
			$mybillingfreq = $billingresult['t_frequency'];
				
			// double frequency to add to the to_date
			$doublefreq = $mybillingfreq * 2;
	
			// insert the new next_billing_date, from_date, to_date, and payment_due_date to next from_date
			$query = "UPDATE billing
				  SET next_billing_date = DATE_ADD('$mybillingdate', INTERVAL '$mybillingfreq' MONTH),
					from_date = DATE_ADD('$myfromdate', INTERVAL '$mybillingfreq' MONTH),
	                                to_date = DATE_ADD('$myfromdate', INTERVAL '$doublefreq' MONTH),
					payment_due_date = DATE_ADD('$myfromdate', INTERVAL '$mybillingfreq' MONTH)
				  WHERE id = '$mybilling_id'";		
			$updateresult = db_query($query) or die ("Query Failed".db_error());				
	
			// TODO: update the from_date and to_date here automatically according to the billing type interval

		} // endif

        } // endwhile

	fclose($handle); // close the file
	print "<b>Wrote file to $filename</b><p>export order: $ccexportvarorder<p><a href=\"index.php\">[ Done ]</a>";

}

?>
</body>
</html>







